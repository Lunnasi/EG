---
- set_fact: hadoop_home="/usr/local/hadoop"
- set_fact: owner="hduser"
- set_fact: group="hadoop"

- name: cp parammeter files 
  copy: 
    dest: "{{ hadoop_home }}/etc/hadoop/{{item}}"
    src: "{{item}}"
    owner: "{{owner}}"
    group: "{{group}}"
    mode: 0644
  with_items:
  - ["yarn-site.xml","hdfs-site.xml","core-site.xml","mapred-site.xml"]

- name: cp enviroment.sh
  copy:
    dest: "/home/hduser/{{item}}"
    src: "{{item}}"
    owner: "{{owner}}"
    group: "{{group}}"
    mode: 0644
  with_items:
  - ["hadoop_env.sh"]

#- name: hdfs-site
#  template: src=hdfs-site.xml dest="{{ hadoop_home }}/etc/hadoop/yarn-site.xml" owner="{{owner}}" group="{{group}}"

- name: master node
  lineinfile:
    dest: "{{hadoop_home}}/etc/hadoop/masters"
    create: yes
    line: 'master'
  when: "{{ item != ansible_hostname }}"
  with_items:
    - "{{ groups['data_node'] }}"


- name: adding slaves
  lineinfile:
    dest: "{{hadoop_home}}}/etc/hadoop/slaves"
    create: yes
    line: node1

# Edding env variables
#- name: .bashrc
#  lineinfile: dest="/home/hduser/.bashrc" line="{{item}}" state=present
#  with_items:
#    - "#HADOOP VARIABLES START"
#    - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
#    - export HADOOP_HOME=/usr/local/hadoop
#    - export PATH=$PATH:$HADOOP_HOME/bin
#    - export PATH=$PATH:$HADOOP_HOME/sbin
#    - export HADOOP_MAPRED_HOME=$HADOOP_HOME
#    - export HADOOP_COMMON_HOME=$HADOOP_HOME
#    - export HADOOP_HDFS_HOME=$HADOOP_HOME
#    - export YARN_HOME=$HADOOP_HOME
#    - export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native
#    - export HADOOP_OPTS="-Djava.library.path=$HADOOP_HOME/lib"
#    - "#HADOOP VARIABLES END"  
  
- name: Seting JAVA_HOME
  lineinfile: dest="{{ hadoop_home }}/etc/hadoop/hadoop-env.sh" regexp=JAVA_HOME= line="export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64"
